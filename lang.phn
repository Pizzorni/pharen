(define "SYSTEM" (dirname __FILE__))
(require_once (. SYSTEM "/lexical.php"))
(define "LIB_PATH" (. SYSTEM "/lib/"))
(set_include_path (. (get_include_path) PATH_SEPARATOR LIB_PATH))

(fn first (xs)
  (:xs 0))

(fn first-pair (xs)
  (array-slice xs 0 1))

(fn rest (xs)
  (array-slice xs 1))

(fn early (xs)
  (array-slice xs 0 (- (count xs) 2)))

(fn take (x xs)
  (array-slice xs 0 x))

(fn drop (x xs)
  (array-slice xs x))

(fn cons (x xs)
  (array-merge (array x) xs))

(fn apply (f val)
  ($f val))

(fn when (c &body)
  '(if ~c
     (do
       ~@body)
     FALSE))

(fn reduce (f acc xs)
  (if (empty xs)
    acc
    (reduce f ($f (first xs) acc) (rest xs))))

(fn reduce-pairs (f acc xs)
  (if (empty xs)
    acc
    (reduce-pairs f ($f (each xs) acc) (rest xs))))

(fn map (f xs)
  (reduce 
    (lambda (x acc) (cons ($f x) acc)) 
    []
    xs))

(fn map-pairs (f pairs)
  (reduce-pairs
    (lambda (pair acc) (cons ($f (:pair 0) (:pair 1)) acc))
    []
    pairs))

(defmacro error (&msgs)
  '(error-log (. ~@msgs)))
