(fn first (xs)
    (at xs 0))

(fn rest (xs)
    (array_slice xs 1))

(fn cons (x xs)
    (array_merge (array x) xs))

(fn map (xs f)
    (if (== (sizeof xs) 0)
        (return (array)))
    (cons ($f (first xs))
                  (map (rest xs) f)))

(fn filter_less (x xs)
    (if (== 0 (count xs))
        (return (array)))
    (elseif (< (first xs) x)
        (return (cons (first xs) (filter_less x (rest xs)))))
    (else
        (return (filter_less x (rest xs)))))

