;here test coverage of lang.phn


(check (when (== 1 1) (= x 2)) 2)

(check (not (== 2 2)) FALSE)

(check (pharen-or (== 3 1) (== 1 2)) FALSE)
(check (pharen-or (== 1 1) (== 1 2)) TRUE)

(check (pharen-and (== 1 1) (== 1 2)) FALSE)
(check (pharen-and (== 1 1) (== 2 2)) TRUE)

(check ((thunk (+ 1 2))) 3)


(class A  (access public (local name "")))
(local a (new A))
(check (inst? a #A) TRUE)


(check (first [0 1 2]) 0)
(check (rest [0 1 2]) [1 2])
(check (pharen-list 1 2 3) [1 2 3])
(check (last [1 2 3]) 3)
(check (butlast [1 2 3]) [1 2])