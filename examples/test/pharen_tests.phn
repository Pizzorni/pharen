(require "../../lib/test.php")
(require "../../pharen.php")

(fn compiles-to (target source)
    (== (compile-file source "tmp") 
        (file-get-contents target)))

(fn run-test (fname msg)
    (it (. "Compiles a " msg)
        (check (. "tests/" fname ".phn") (compiles-to (. "tests/" fname ".php")))))

(let 
    [[tests {
        "basic_func_call" "basic function call",
        "nested_func_call" "function call nested in another",
        "infix_call" "call to the `+` infix operator of two integers and a float",
        "comments" "a stand-alone comment, end-of-expression comment, and middle-of-expression comment so they don't show up (for now) in the compiled code",
        "def_definition" "single definition of a variable using the 'def' form",
        "let_definition" "binding and use of two variables using let form",
        "vector_literals" "vector literal of integers and another of strings",
        "range" "range of numbers between 1 and 1000",
        "stepped_range" "range of even numbers between 2 and 1000",
        "dictionary" "dictionary with two keys set to strings and one key set to a nested dictionary",
        "dictionary_literal" "dictionary with the same data as dictionary.phn but using the literal {braced} syntax",
        "list_access" "access of a list and nested access of a list inside a dictionary",
        "cond" "stand-alone cond expression with 3 branches and another one used as the value in a def assignment."
    }]]
    
    (describe "Pharen compiler"
        (lambda ()
            (map-pairs "run-test" tests))))
