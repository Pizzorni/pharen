(ns lazy)
(fn map (f coll)
  (lazy
    (if (empty? coll)
      []
      (cons ($f (first coll)) (map f (rest coll))))))

(fn take (n coll)
  (lazy
    (if (zero-or-empty? n coll)
      []
      (cons (first coll) (take (- n 1) (rest coll))))))

(fn interleave (xs ys)
  (lazy
    (if (or (empty? xs) (empty? ys))
      []
      (cons (first xs) (interleave ys (rest xs))))))

(fn filter (f coll)
  (lazy
    (if (empty? coll)
      []
      (let [x (first coll), xs (rest coll)]
        (if (not ($f x))
          (filter f xs)
          (cons x (filter f xs)))))))
