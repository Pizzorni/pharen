(use pharen.stats as stats)

(defmacro trial (expr)
  '(let [time-start (microtime TRUE)
         result ~expr
         time-duration (- (microtime TRUE) time-start)]
     time-duration))

(defmacro bench (name expr)
  '(let [n 10
         times []]
     (prn (generate-report ~name n
                           (dotimes [i n]
                             (local t (trial ~expr))
                             (set! times (cons t times)))))))

(fn pretty (t)
  (if (> t 1000)
    (. (sprintf "%.4f" t) " seconds")
    (. (sprintf "%.4f" (* 1000 t)) " ms")))

(fn generate-report (name n times)
  (let [mean (stats.mean times)
        median (stats.median times)
        max (stats.max times)
        min (stats.min times)
        std-dev (stats.std-dev times)
        plusmin (round (* (/ std-dev mean) 100) 2)
        header (. "Benchmarking " name " - " n " trials:")]
    (. header "\n"
       (str-repeat "=" (strlen header)) "\n"
       "Mean:\t "   (pretty mean) " +/- " plusmin "%\n"
       "Median:\t " (pretty median) "\n"
       "Max:\t "    (pretty max) "\n"
       "Min:\t "    (pretty min) "\n"
       "Std dev: " (pretty std-dev) "\n"
       )))
