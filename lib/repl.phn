(require_once "path.php")
(define "REPL_SYSTEM" (realpath (dirname __FILE__)))
(define "PHAREN_SYSTEM" (path-join REPL-SYSTEM "../"))

(require-once (. PHAREN_SYSTEM "/pharen.php"))

(if (function-exists "readline")
  (fn prompt (prompt)
    (let [line (trim (readline prompt))]
      (readline-add-history line)
      line))
  (fn prompt (prompt)
    (fwrite STDOUT prompt)
    (trim (fgets STDIN))))

(fn evaluate (code)
  (let [embedded-code (. "(fn eval-func () " code ")")
        compiled-code (compile embedded-code)
        no-func-def (str-replace "function eval_func(){" "" compiled-code)
        final-code (substr 
                     no-func-def
                     0
                     (- (strrpos no-func-def "}") 1))]
    (eval (. "?>" final-code))))

(fn work ()
  (let [code (prompt "pharen> ")]
    (if (== code "quit")
      (exit 0)
      (do
        (fwrite STDOUT (. (evaluate code) "\n" ))
        (work)))))

(work)
